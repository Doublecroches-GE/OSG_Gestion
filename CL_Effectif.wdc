#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : CL_Effectif
 major_version : 30
 minor_version : 0
 type : 4
 description : ""
 subtype : 0
class :
 identifier : 0x1376110600d4f314
 internal_properties : HgAAAB4AAAB2/vstTMCJbS/hlxjFxirSqKvCUuv8YxgpWyl7S3iA
 code_elements :
  type_code : 10
  p_codes :
   -
     code : |1+
      CL_Effectif est une Classe
      //	m_nIDSession	est un entier sur 8 octets
      	m_tab_Pupitres	est un tableau de CL_Session_Pupitre
      	m_tab_PISP		est un tableau de CL_Personne_Instrument_Session_Pupitre
      
      	
      fin
     type : 131072
  procedures :
   -
     name : Constructeur
     procedure_id : 1402327051453985556
     type_code : 27
     code : |1+
      procédure Constructeur()
      
     type : 589824
   -
     name : Destructeur
     procedure_id : 1402327051454051092
     type_code : 28
     code : |1+
      procédure Destructeur()
      
     type : 655360
   -
     name : Charger_ListePupitres
     procedure_id : 1402327846023054968
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      // Charger_ListePupitres ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      PROCÉDURE Charger_ListePupitres()
      
      m_tab_Pupitres = Liste_Pupitres_Session(gcl_SessionEnCours.m_ID)
     type : 458752
   -
     name : Charger_ListeMusiciens
     procedure_id : 1404941277814611365
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //Charger_ListeMusiciens ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure Charger_ListeMusiciens()
      
      vn_nbOcc est un entier
      m_tab_PISP.SupprimeTout()
      
      REQ_Personnes_Session.p_IDSession = gcl_SessionEnCours.m_ID
      SI HExécuteRequête(REQ_Personnes_Session) ALORS
      	FichierVersTableau(m_tab_PISP, REQ_Personnes_Session)
      FIN
      
      vn_nbOcc = TableauOccurrence(m_tab_PISP)
      POUR i = 1 A vn_nbOcc
      	m_tab_PISP[i].Charger_Detail()
      FIN
     type : 458752
   -
     name : Charger_MusiciensPupitre
     procedure_id : 1406796394435248215
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //Charger_MusiciensPupitre (<vn_IDPupitre> est entier sur 8 octets)
      //
      // Paramètres :
      //	vn_IDPupitre (entier sur 8 octets) : <indiquez ici le rôle de vn_IDPupitre>
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure Charger_MusiciensPupitre(vn_IDPupitre est un entier sur 8 octets)
      
      vn_nbOcc est un entier
      
      vn_nbOcc = TableauOccurrence(:m_tab_Pupitres)
      Pour i = 1 A vn_nbOcc
      	SI :m_tab_Pupitres[i].m_IDPupitre = vn_IDPupitre ALORS
      		:m_tab_Pupitres[i].m_clPupitre.Charger_ListeMusiciens(gcl_SessionEnCours.m_ID)
      		SORTIR
      	FIN
      FIN
     type : 458752
   -
     name : Recharger
     procedure_id : 1407999363675374582
     type_code : 12
     code : |1+
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      // Recharger ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure Recharger()
      
      :Charger_ListePupitres()
      :Charger_ListeMusiciens()
     type : 458752
   -
     name : GET_MusiciensPupitre
     procedure_id : 1411993931991642756
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] GET_MusiciensPupitre (<vn_IDPupitre> est entier sur 8 octets)
      //
      // Paramètres :
      //	vn_IDPupitre (entier sur 8 octets) : <indiquez ici le rôle de vn_IDPupitre>
      // Valeur de retour :
      // 	tableau (CL_SelectionPersonnePupitre) : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure GET_MusiciensPupitre(vn_IDPupitre est un entier sur 8 octets):tableau de CL_Personne_Instrument_Session_Pupitre
      
      vn_nbOcc est un entier
      vtab_retour est un tableau de CL_Personne_Instrument_Session_Pupitre
      
      
      Pour tout vcl_PISP de m_tab_PISP AVEC m_IDPupitre = vn_IDPupitre
      	TableauAjouteLigne(vtab_retour, vcl_PISP)
      FIN
      
      //vn_nbOcc = TableauOccurrence(m_tab_PISP)
      //POUR i = 1 À vn_nbOcc
      //	m_tab_PISP[i].Charger_Detail()
      //FIN
      
      
      //	vtab_retour est un tableau de CL_Personne_Instrument_Session_Pupitre
      //
      //	Pour TOUT vcl_PISP DE m_tab_PISP
      //		Si vcl_PISP.m_clSessionPupitre.m_IDPupitre = vn_IDPupitre ALORS
      //			TableauAjouteLigne(vtab_retour, vcl_PISP)
      //		FIN
      //	FIN
      	RENVOYER (vtab_retour)
     type : 458752
   -
     name : Charger
     procedure_id : 1412006340167435938
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      // Charger ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure Charger()
      
      
      REQ_Personnes_Session_Instrument_Pupitre.p_IDSession = gcl_SessionEnCours.m_ID
      SI HExécuteRequête(REQ_Personnes_Session_Instrument_Pupitre) ALORS
      	FichierVersTableau(m_tab_PISP,REQ_Personnes_Session_Instrument_Pupitre)
      FIN
      
      //vn_nbOcc = TableauOccurrence(m_tab_PISP)
      //Pour i = 1 A vn_nbOcc
      //	m_tab_PISP[i].Charger_Detail()
      //FIN
     type : 458752
   -
     name : SET_ChefAttaque
     procedure_id : 1751155164163553801
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //SET_ChefAttaque (<vcl_pisp> est CL_Personne_Instrument_Session_Pupitre)
      //
      // Paramètres :
      //	vcl_pisp (CL_Personne_Instrument_Session_Pupitre) : <indiquez ici le rôle de vn_idPisp>
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure SET_ChefAttaque(LOCAL vcl_pisp est une CL_Personne_Instrument_Session_Pupitre)
      
      vn_idPupitre est un entier sur 8 octets
      
      vn_idPupitre = vcl_pisp.IDPupitre
      
      Pour tout v_pisp de m_tab_PISP
      	Si v_pisp.IDPupitre = vn_idPupitre ALORS
      		SI v_pisp.m_ID = vcl_pisp.m_ID alors
      			v_pisp.m_ChefAttaque = vrai
      			v_pisp.Sauver()
      		SINON
      			SI v_pisp.m_ChefAttaque ALORS
      				v_pisp.m_ChefAttaque = Faux
      				v_pisp.Sauver()
      			FIN
      		FIN
      	FIN
      FIN
     type : 458752
   -
     name : SET_Voix
     procedure_id : 1751201648866582197
     type_code : 12
     code : |1+
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //SET_Voix (<vcl_pisp> est CL_Personne_Instrument_Session_Pupitre, <v_sens> est entier)
      //
      // Paramètres :
      //	vcl_pisp (CL_Personne_Instrument_Session_Pupitre) : <indiquez ici le rôle de vcl_pisp>
      //	v_sens (entier) : <indiquez ici le rôle de v_sens>
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure SET_Voix(LOCAL vcl_pisp est une CL_Personne_Instrument_Session_Pupitre, vn_sens est un entier)
      
      vn_position				est un entier
      vn_ind					est un entier
      
      vtab_musiciensPupitre	est un tableau de CL_Personne_Instrument_Session_Pupitre
      vtab_musiciensPupitre	= GET_MusiciensPupitre(vcl_pisp.IDPupitre)
      TableauTrie(vtab_musiciensPupitre,ttMembre,"m_Voix")
      
      vn_ind = TableauCherche(vtab_musiciensPupitre,tcLinéaire,"m_Voix", vcl_pisp.m_Voix)
      
      si vn_ind > 0 ALORS
      	Si vn_sens = -1 ALORS //Monter
      		vn_position = vn_ind - 1
      	SINON
      		vn_position = vn_ind +1
      	FIN
      	vtab_musiciensPupitre[vn_position].m_Voix = vtab_musiciensPupitre[vn_ind].m_Voix
      	vtab_musiciensPupitre[vn_position].Sauver()
      	vtab_musiciensPupitre[vn_ind].m_Voix += vn_sens
      	vtab_musiciensPupitre[vn_ind].Sauver()
      FIN
      Charger_ListeMusiciens()
     type : 458752
   -
     name : GET_NbMusiciensPupitre
     procedure_id : 1751212592461200755
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] GET_NbMusiciensPupitre (<vn_idPupitre>)
      //
      // Paramètres :
      // 	vn_idPupitre : <indiquez ici le rôle de vn_idPupitre>
      // Valeur de retour :
      // 	entier : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure GET_NbMusiciensPupitre(vn_idPupitre)
      
      RENVOYER TableauOccurrence(GET_MusiciensPupitre(vn_idPupitre))
     type : 458752
   -
     name : GET_ListeMusiciens
     procedure_id : 1757421190784088649
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] GET_ListeMusiciens ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	tableau (CL_Impr_Personnes) : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure GET_ListeMusiciens():tableau de CL_Impr_Personnes
      
      vtab_pers	est un tableau de CL_Impr_Personnes
      vcl_pers	est une CL_Impr_Personnes
      vn_nbOcc	Est un entier
      
      vn_nbOcc = TableauOccurrence(:m_tab_PISP)
      Pour i = 1 a vn_nbOcc
      	:m_tab_PISP[i].Charger_Detail()
      	VariableRAZ(vcl_pers)
      	vcl_pers.m_nIDPupitre				= :m_tab_PISP[i].IDPupitre
      	vcl_pers.m_bEst_HEM					= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_bHEM
      	vcl_pers.m_bEst_renfort				= :m_tab_PISP[i].m_Est_Renfort
      	vcl_pers.m_bEst_chefAttaque			= :m_tab_PISP[i].ChefAttaque
      	vcl_pers.m_bDonneesTransmissibles	= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_bDonnees_Transmissibles
      	vcl_pers.m_nOrdrePupitre			= :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_nOrdre
      	vcl_pers.m_nVoix					=  :m_tab_PISP[i].m_Voix
      	vcl_pers.m_sEmail					= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sEMail
      	vcl_pers.m_sNom						= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sNom
      	vcl_pers.m_sPrenom					= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sPrenom
      	vcl_pers.m_sPrenom_Nom				= :m_tab_PISP[i].m_clPersInst.m_clPersonne.Prenom_Nom
      	vcl_pers.m_sPupitre					= :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_sPupitre
      	vcl_pers.m_sTel						= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sTelephone
      	vcl_pers.m_sCommentaire				= :m_tab_PISP[i].m_Commentaire
      	vtab_pers.Ajoute(vcl_pers)
      FIN
      
      TableauTrie(vtab_pers,ttMembre,"m_nOrdrePupitre;-m_bEst_chefAttaque;m_nVoix;m_sNom")
      
      RENVOYER vtab_pers
     type : 458752
   -
     name : GET_ListeCordes_ParPupitre
     procedure_id : 1757491546597485382
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] GET_ListeCordes_ParPupitre ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	tableau (CL_Impr_Personnes) : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure GET_ListeCordes_ParPupitre():tableau de CL_Impr_Personnes
      
      vtab_pers	est un tableau de CL_Impr_Personnes
      vcl_pers	est une CL_Impr_Personnes
      vn_nbOcc	Est un entier
      
      vn_nbOcc = TableauOccurrence(:m_tab_PISP)
      Pour i = 1 a vn_nbOcc
      	SI :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_IDFamille <> 2 ALORS CONTINUE
      
      	VariableRAZ(vcl_pers)
      	vcl_pers.m_nIDPupitre				= :m_tab_PISP[i].IDPupitre
      	vcl_pers.m_bEst_HEM					= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_bHEM
      	vcl_pers.m_bEst_renfort				= :m_tab_PISP[i].m_Est_Renfort
      	vcl_pers.m_bEst_chefAttaque			= :m_tab_PISP[i].ChefAttaque
      	vcl_pers.m_bDonneesTransmissibles	= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_bDonnees_Transmissibles
      	vcl_pers.m_nOrdrePupitre			= :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_nOrdre
      	vcl_pers.m_nVoix					= :m_tab_PISP[i].m_Voix
      	vcl_pers.m_sEmail					= vcl_pers.m_bDonneesTransmissibles? :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sEMail SINON ""
      	vcl_pers.m_sNom						= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sNom
      	vcl_pers.m_sPrenom					= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sPrenom
      	vcl_pers.m_sPrenom_Nom				= :m_tab_PISP[i].m_clPersInst.m_clPersonne.Prenom_Nom
      	vcl_pers.m_sPupitre					= :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_sPupitre
      	vcl_pers.m_sTel						= vcl_pers.m_bDonneesTransmissibles? :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sTelephone SINON ""
      	vcl_pers.m_sCommentaire				= :m_tab_PISP[i].m_Commentaire
      	vtab_pers.Ajoute(vcl_pers)
      FIN
      
      TableauTrie(vtab_pers,ttMembre,"m_nOrdrePupitre;-m_bEst_chefAttaque;m_nVoix;m_sNom")
      
      RENVOYER vtab_pers
     type : 458752
   -
     name : GET_ListeVents
     procedure_id : 1757496309721323920
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] GET_ListeVents ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	tableau (CL_Impr_Personnes) : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure GET_ListeVents():tableau de CL_Impr_Personnes
      
      vtab_pers	est un tableau de CL_Impr_Personnes
      vcl_pers	est une CL_Impr_Personnes
      vn_nbOcc	Est un entier
      
      vn_nbOcc = TableauOccurrence(:m_tab_PISP)
      Pour i = 1 a vn_nbOcc
      	SI :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_IDFamille <> 4 _ET_ :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_IDFamille <> 5 ALORS CONTINUE
      
      	VariableRAZ(vcl_pers)
      	vcl_pers.m_nIDPupitre				= :m_tab_PISP[i].IDPupitre
      	vcl_pers.m_bEst_HEM					= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_bHEM
      	vcl_pers.m_bEst_renfort				= :m_tab_PISP[i].m_Est_Renfort
      	vcl_pers.m_bEst_chefAttaque			= :m_tab_PISP[i].ChefAttaque
      	vcl_pers.m_bDonneesTransmissibles	= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_bDonnees_Transmissibles
      	vcl_pers.m_nOrdrePupitre			= :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_nOrdre
      	vcl_pers.m_nVoix					= :m_tab_PISP[i].m_Voix
      	vcl_pers.m_sEmail					= vcl_pers.m_bDonneesTransmissibles? :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sEMail SINON ""
      	vcl_pers.m_sNom						= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sNom
      	vcl_pers.m_sPrenom					= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sPrenom
      	vcl_pers.m_sPrenom_Nom				= :m_tab_PISP[i].m_clPersInst.m_clPersonne.Prenom_Nom
      	vcl_pers.m_sPupitre					= :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_sPupitre
      	vcl_pers.m_sTel						= vcl_pers.m_bDonneesTransmissibles? :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sTelephone SINON ""
      	vcl_pers.m_sCommentaire				= :m_tab_PISP[i].m_Commentaire
      	vtab_pers.Ajoute(vcl_pers)
      FIN
      
      TableauTrie(vtab_pers,ttMembre,"m_nOrdrePupitre;-m_bEst_chefAttaque;m_nVoix;m_sNom")
      
      RENVOYER vtab_pers
     type : 458752
   -
     name : GET_ListeAutres
     procedure_id : 1757498624713494991
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] GET_ListeAutres ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	tableau (CL_Impr_Personnes) : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure GET_ListeAutres():tableau de CL_Impr_Personnes
      
      vtab_pers	est un tableau de CL_Impr_Personnes
      vcl_pers	est une CL_Impr_Personnes
      vn_nbOcc	Est un entier
      
      vn_nbOcc = TableauOccurrence(:m_tab_PISP)
      Pour i = 1 a vn_nbOcc
      	SI :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_IDFamille <> 3 _ET_ :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_IDFamille <> 6 ALORS CONTINUE
      
      	VariableRAZ(vcl_pers)
      	vcl_pers.m_nIDPupitre				= :m_tab_PISP[i].IDPupitre
      	vcl_pers.m_bEst_HEM					= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_bHEM
      	vcl_pers.m_bEst_renfort				= :m_tab_PISP[i].m_Est_Renfort
      	vcl_pers.m_bEst_chefAttaque			= :m_tab_PISP[i].ChefAttaque
      	vcl_pers.m_bDonneesTransmissibles	= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_bDonnees_Transmissibles
      	vcl_pers.m_nOrdrePupitre			= :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_nOrdre
      	vcl_pers.m_nVoix					= :m_tab_PISP[i].m_Voix
      	vcl_pers.m_sEmail					= vcl_pers.m_bDonneesTransmissibles? :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sEMail SINON ""
      	vcl_pers.m_sNom						= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sNom
      	vcl_pers.m_sPrenom					= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sPrenom
      	vcl_pers.m_sPrenom_Nom				= :m_tab_PISP[i].m_clPersInst.m_clPersonne.Prenom_Nom
      	vcl_pers.m_sPupitre					= :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_sPupitre
      	vcl_pers.m_sTel						= vcl_pers.m_bDonneesTransmissibles? :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sTelephone SINON ""
      	vcl_pers.m_sCommentaire				= :m_tab_PISP[i].m_Commentaire
      	vtab_pers.Ajoute(vcl_pers)
      FIN
      
      TableauTrie(vtab_pers,ttMembre,"m_nOrdrePupitre;-m_bEst_chefAttaque;m_nVoix;m_sNom")
      
      RENVOYER vtab_pers
     type : 458752
   -
     name : GET_ListeMusiciens_Pupitre
     procedure_id : 1757501614015491974
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //[ <Résultat> = ] GET_ListeMusiciens_Pupitre (<vn_idPupitre>)
      //
      // Paramètres :
      //	vn_idPupitre : <indiquez ici le rôle de vn_idPupitre>
      // Valeur de retour :
      // 	tableau (CL_Impr_Personnes) : <indiquez ici le rôle de la valeur de retour>
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure GET_ListeMusiciens_Pupitre(vn_idPupitre)
      
      vtab_pers	est un tableau de CL_Impr_Personnes
      vcl_pers	est une CL_Impr_Personnes
      vn_nbOcc	est un entier
      
      vn_nbOcc = TableauOccurrence(:m_tab_PISP)
      POUR i = 1 À vn_nbOcc
      	SI :m_tab_PISP[i].IDPupitre <> vn_idPupitre ALORS CONTINUE
      	:m_tab_PISP[i].Charger_Detail()
      	VariableRAZ(vcl_pers)
      	vcl_pers.m_nIDPupitre				= :m_tab_PISP[i].IDPupitre
      	vcl_pers.m_bEst_HEM					= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_bHEM
      	vcl_pers.m_bEst_renfort				= :m_tab_PISP[i].m_Est_Renfort
      	vcl_pers.m_bEst_chefAttaque			= :m_tab_PISP[i].ChefAttaque
      	vcl_pers.m_bDonneesTransmissibles	= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_bDonnees_Transmissibles
      	vcl_pers.m_nOrdrePupitre			= :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_nOrdre
      	vcl_pers.m_nVoix					= :m_tab_PISP[i].m_Voix
      	vcl_pers.m_sEmail					= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sEMail
      	vcl_pers.m_sNom						= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sNom
      	vcl_pers.m_sPrenom					= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sPrenom
      	vcl_pers.m_sPrenom_Nom				= :m_tab_PISP[i].m_clPersInst.m_clPersonne.Prenom_Nom
      	vcl_pers.m_sPupitre					= :m_tab_PISP[i].m_clSessionPupitre.m_clPupitre.m_sPupitre
      	vcl_pers.m_sTel						= :m_tab_PISP[i].m_clPersInst.m_clPersonne.m_sTelephone
      	vcl_pers.m_sCommentaire				= :m_tab_PISP[i].m_Commentaire
      	vtab_pers.Ajoute(vcl_pers)
      FIN
      
      TableauTrie(vtab_pers,ttMembre,"m_nOrdrePupitre;-m_bEst_chefAttaque;m_nVoix;m_sNom")
      
      RENVOYER vtab_pers
     type : 458752
   -
     name : Charger_ListeMusiciens_LIGHT
     procedure_id : 1776376775471360077
     type_code : 12
     code : |1-
      // Résumé : <indiquez ici ce que fait la procédure>
      // Syntaxe :
      //Charger_ListeMusiciens_LIGHT ()
      //
      // Paramètres :
      //	Aucun
      // Valeur de retour :
      // 	Aucune
      //
      // Exemple :
      // <Indiquez ici un exemple d'utilisation>
      //
      procédure Charger_ListeMusiciens_LIGHT()
      
      m_tab_PISP.SupprimeTout()
      
      REQ_Personnes_Session.p_IDSession = gcl_SessionEnCours.m_ID
      SI HExécuteRequête(REQ_Personnes_Session) ALORS
      	FichierVersTableau(m_tab_PISP, REQ_Personnes_Session)
      FIN
     type : 458752
  properties :
   -
     name : tab_Pupitres
     identifier : 0x187f6df2090da80f
     type_code : 103
     p_codes :
      -
        code : |1-
         procédure publique tab_Pupitres()
         
         SI TableauOccurrence(m_tab_Pupitres) = 0 alors
         	Charger_ListePupitres()
         FIN
         renvoyer m_tab_Pupitres
        type : 1966080
     template_refs : []
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : HgAAAB4AAADXPUOq6bQdTI/fs1mC0I6nimWl2G84EsAbne5i32IM05uoRA==
  original_name : Classe1
resources :
 string_res :
  identifier : 0x137610fa00d1c4d0
  internal_properties : HgAAAB4AAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : HgAAAB4AAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
